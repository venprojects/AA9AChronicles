# Инициализация переменных

# Инициализация звуков

define audio.blip = "audio/sound/blip.wav"

# Каллбеки

init python:
    def blip_voice(event, interact=True, **kwargs):
        if not interact:
            return

        if event == "show_done":
            renpy.sound.play("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
            renpy.sound.queue("audio/sound/blip.wav")
        elif event == "slow_done" or event == "end":
            renpy.sound.stop(fadeout=0.4)

    def blip_machine_voice(event, interact=True, **kwargs):
        if not interact:
            return

        if event == "show_done":
            renpy.sound.play("audio/sound/blip-machine.wav")
            renpy.sound.play("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")
            renpy.sound.queue("audio/sound/blip-machine.wav")

        elif event == "slow_done" or event == "end":
            renpy.sound.stop(fadeout=0.4)

# Инициализация персонажей

define unknown = Character('???', color="#ffffff")
define teller = Character('Рассказчик', color="#ffffff")
define alex = Character('Александр', color="#ffffff", image="alex", callback=blip_voice)
define kirill = Character('Кирилл', color="#ffffff", callback=blip_voice)
define game = Character(None, what_xalign=0.5, what_text_align=0.5,  text_xpos=0.5, callback=blip_machine_voice)
